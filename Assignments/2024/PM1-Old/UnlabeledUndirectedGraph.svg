<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1339px" preserveAspectRatio="none" style="width:754px;height:1339px;background:#FFFFFF;" version="1.1" viewBox="0 0 754 1339" width="754px" zoomAndPan="magnify"><defs/><g><!--MD5=[597ae5559ac753782f570ad36eafc84f]
cluster Mathematics--><g id="cluster_Mathematics"><path d="M176.2271,32.8288 C190.9414,18.5977 204.9853,19.539 214.304,38.9379 C223.9271,16.5519 240.0204,18.0457 254.1448,34.2965 C265.9441,17.2154 279.1447,18.8383 290.7879,34.4714 C301.2729,15.8773 319.8503,17.6615 328.9443,35.9119 C335.8876,19.6809 352.8464,16.2412 364.0959,31.0325 C374.7656,14.4587 389.7517,9.6173 402.7647,28.475 C414.2149,6 433.535,6.8635 445.6876,27.7802 C459.0749,7.7529 477.7341,14.1686 485.2362,33.6685 C496.6504,15.6356 509.6689,15.9862 521.9666,32.7354 C531.7946,16.0229 548.0418,18.3735 556.0584,34.6097 C568.3132,14.882 581.7385,14.2693 595.7882,32.743 C608.6943,16.8418 625.0998,14.9142 634.1587,36.6638 C644.5521,18.3793 661.3423,16.5199 673.4888,34.7768 C689.0394,18.345 705.3276,18.2875 716.5,39.7467 C719.0217,40.7277 718.8487,42.7986 716.9478,44.2222 C739.286,52.8612 744.167,70.8606 726.2052,88.018 C747.2355,114.8154 739.5109,130.1198 709.5,140.7467 C713.4398,140.9225 714.134,143.2224 712.6063,146.4015 C700.9644,166.9666 688.4606,162.7997 675.6418,147.6185 C660.8602,166.4147 646.2467,162.3566 635.6793,143.183 C626.4736,163.1886 609.5909,162.6363 596.2959,147.8059 C587.7928,165.7951 571.8165,170.1525 559.5428,151.5981 C546.3969,167.0813 533.0279,167.2081 522.4799,148.7604 C510.555,169.1721 496.5872,168.1343 484.8919,148.5447 C477.0863,165.8664 459.404,170.136 446.2544,154.8833 C430.003,177.3288 414.1315,175.9482 401.5552,151.3885 C390.734,168.8187 378.5393,164.2981 368.7801,150.2817 C357.3968,170.2571 339.1621,168.3942 329.8544,148.2671 C317.1022,169.1419 303.69,164.6125 290.6501,148.5725 C274.962,164.8653 261.9331,166.7429 248.6633,145.8425 C238.1052,160.7913 228.2443,164.0608 215.2615,148.4969 C192.1578,168.1988 173.4282,160.2803 163.5,133.7467 C164.3459,133.7146 164.5328,134.127 164.3442,134.8714 C141.975,122.2748 134.3589,108.0565 155.9923,87.6734 C138.1959,64.7418 139.8989,42.8952 170.5,32.7467 C172.0637,29.6444 174.7489,29.9677 176.2271,32.8288 " style="stroke:#181818;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="107" x="386.5" y="50.7418">Mathematics</text></g><!--MD5=[2e2f8c8f62c4eb3bc59a59727cfd81a5]
class Edge--><g id="elem_Edge"><rect codeLine="74" fill="#F1F1F1" height="72.5938" id="Edge" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="172" x="536.5" y="59.7467"/><ellipse cx="600.25" cy="75.7467" fill="#DA70D6" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M597.1563,74.1373 L599.1719,78.4029 L600.7188,78.4029 L602.6094,74.1373 L602.6094,79.0436 L602.0156,79.0436 C601.5625,79.0436 601.4531,79.0592 601.2969,79.1686 C601.0469,79.3248 600.8906,79.6061 600.8906,79.9029 C600.8906,80.1529 601.0156,80.4186 601.25,80.5748 C601.375,80.6998 601.625,80.7467 602.0156,80.7467 L604.2188,80.7467 C604.5625,80.7467 604.8125,80.6998 604.9375,80.6217 C605.1875,80.4654 605.3438,80.1842 605.3438,79.9029 C605.3438,79.3561 604.9688,79.0436 604.2969,79.0436 L604.2969,72.5279 C604.8594,72.4811 605.1875,72.1842 605.1875,71.6842 C605.1875,71.4186 605.0469,71.1529 604.8438,70.9811 C604.6719,70.8717 604.5313,70.8404 604.0625,70.8404 L602.2031,70.8404 L599.9063,75.8873 L597.5625,70.8404 L595.7031,70.8404 C595.6875,70.8248 595.6719,70.8248 595.6406,70.8248 C595.4375,70.8248 595.0781,70.8873 594.9844,70.9342 C594.7344,71.1061 594.5781,71.4029 594.5781,71.6686 C594.5781,72.1842 594.9063,72.4811 595.4688,72.5279 L595.4688,79.0436 C594.7969,79.0436 594.4219,79.3561 594.4219,79.9029 C594.4219,80.1686 594.5625,80.4186 594.7813,80.5748 C594.9375,80.6998 595.1563,80.7467 595.5625,80.7467 L597.7656,80.7467 C598.0938,80.7467 598.3594,80.6998 598.4688,80.6217 C598.7344,80.4654 598.875,80.1842 598.875,79.9029 C598.875,79.6217 598.7656,79.3717 598.5469,79.1998 C598.3594,79.0748 598.2188,79.0436 597.7656,79.0436 L597.1563,79.0436 L597.1563,74.1373 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="36" x="620.75" y="80.5934">Edge</text><line style="stroke:#181818;stroke-width:0.5;" x1="537.5" x2="707.5" y1="91.7467" y2="91.7467"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="542.5" y="108.7418">e: finite set of integer</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="542.5" y="125.0387">Constraint |e| = 2</text></g><!--MD5=[b0524128a70570a568fa7e20c41adb4a]
class UNLABELED_UNDIRECTED_GRAPH_MODEL--><g id="elem_UNLABELED_UNDIRECTED_GRAPH_MODEL"><rect codeLine="79" fill="#F1F1F1" height="72.5938" id="UNLABELED_UNDIRECTED_GRAPH_MODEL" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="330" x="171.5" y="59.7467"/><ellipse cx="186.5" cy="75.7467" fill="#DA70D6" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M183.4063,74.1373 L185.4219,78.4029 L186.9688,78.4029 L188.8594,74.1373 L188.8594,79.0436 L188.2656,79.0436 C187.8125,79.0436 187.7031,79.0592 187.5469,79.1686 C187.2969,79.3248 187.1406,79.6061 187.1406,79.9029 C187.1406,80.1529 187.2656,80.4186 187.5,80.5748 C187.625,80.6998 187.875,80.7467 188.2656,80.7467 L190.4688,80.7467 C190.8125,80.7467 191.0625,80.6998 191.1875,80.6217 C191.4375,80.4654 191.5938,80.1842 191.5938,79.9029 C191.5938,79.3561 191.2188,79.0436 190.5469,79.0436 L190.5469,72.5279 C191.1094,72.4811 191.4375,72.1842 191.4375,71.6842 C191.4375,71.4186 191.2969,71.1529 191.0938,70.9811 C190.9219,70.8717 190.7813,70.8404 190.3125,70.8404 L188.4531,70.8404 L186.1563,75.8873 L183.8125,70.8404 L181.9531,70.8404 C181.9375,70.8248 181.9219,70.8248 181.8906,70.8248 C181.6875,70.8248 181.3281,70.8873 181.2344,70.9342 C180.9844,71.1061 180.8281,71.4029 180.8281,71.6686 C180.8281,72.1842 181.1563,72.4811 181.7188,72.5279 L181.7188,79.0436 C181.0469,79.0436 180.6719,79.3561 180.6719,79.9029 C180.6719,80.1686 180.8125,80.4186 181.0313,80.5748 C181.1875,80.6998 181.4063,80.7467 181.8125,80.7467 L184.0156,80.7467 C184.3438,80.7467 184.6094,80.6998 184.7188,80.6217 C184.9844,80.4654 185.125,80.1842 185.125,79.9029 C185.125,79.6217 185.0156,79.3717 184.7969,79.1998 C184.6094,79.0748 184.4688,79.0436 184.0156,79.0436 L183.4063,79.0436 L183.4063,74.1373 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="298" x="200.5" y="80.5934">UNLABELED_UNDIRECTED_GRAPH_MODEL</text><line style="stroke:#181818;stroke-width:0.5;" x1="172.5" x2="500.5" y1="91.7467" y2="91.7467"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="177.5" y="108.7418">vertices: finite set of integer</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="177.5" y="125.0387">edges: finite set of Edge</text></g><!--MD5=[e02fd8407a76e80065dcb153a65046fa]
class UnlabeledUndirectedGraph1--><g id="elem_UnlabeledUndirectedGraph1"><rect codeLine="3" fill="#F1F1F1" height="1139.8906" id="UnlabeledUndirectedGraph1" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="659" x="7" y="192.7467"/><ellipse cx="230.75" cy="208.7467" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M233.0938,204.4186 C232.1563,203.9811 231.5625,203.8404 230.6875,203.8404 C228.0625,203.8404 226.0625,205.9186 226.0625,208.6373 L226.0625,209.7623 C226.0625,212.3404 228.1719,214.2311 231.0625,214.2311 C232.2813,214.2311 233.4375,213.9342 234.1875,213.3873 C234.7656,212.9811 235.0938,212.5279 235.0938,212.1373 C235.0938,211.6842 234.7031,211.2936 234.2344,211.2936 C234.0156,211.2936 233.8125,211.3717 233.625,211.5592 C233.1719,212.0436 233.1719,212.0436 232.9844,212.1373 C232.5625,212.4029 231.875,212.5279 231.1094,212.5279 C229.0625,212.5279 227.7656,211.4342 227.7656,209.7311 L227.7656,208.6373 C227.7656,206.8561 229.0156,205.5436 230.75,205.5436 C231.3281,205.5436 231.9375,205.6998 232.4063,205.9498 C232.8906,206.2311 233.0625,206.4498 233.1563,206.8561 C233.2188,207.2623 233.25,207.3873 233.3906,207.5123 C233.5313,207.6529 233.7656,207.7623 233.9844,207.7623 C234.25,207.7623 234.5156,207.6217 234.6875,207.4029 C234.7969,207.2467 234.8281,207.0592 234.8281,206.6373 L234.8281,205.2154 C234.8281,204.7779 234.8125,204.6529 234.7188,204.4967 C234.5625,204.2311 234.2813,204.0904 233.9844,204.0904 C233.6875,204.0904 233.4844,204.1842 233.2656,204.4967 L233.0938,204.4186 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="251.25" y="213.5934">UnlabeledUndirectedGraph1</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="665" y1="224.7467" y2="224.7467"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="647" x="13" y="241.7418">type UnlabeledUndirectedGraph1 is modeled by UNLABELED_UNDIRECTED_GRAPH_MODEL</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="13" y="258.0387">exemplar g</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="13" y="274.3355">initialization ensures</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="13" y="290.6324">g = ({},{})</text><ellipse cx="18" cy="321.2311" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="27" y="327.2262">UnlabeledUndirectedGraph1 ()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="27" y="343.523">//! replaces self</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="27" y="359.8199">//! ensures: self = ({},{})</text><ellipse cx="18" cy="370.1217" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="228" x="27" y="376.1168">~UnlabeledUndirectedGraph1 ()</text><ellipse cx="18" cy="386.4186" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="27" y="392.4137">clear(): void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="27" y="408.7105">//! clears self</text><ellipse cx="18" cy="419.0123" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="413" x="27" y="425.0074">transferFrom (UnlabeledUndirectedGraph1&amp; source): void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="27" y="441.3043">//! replaces self</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="27" y="457.6012">//! clears source</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187" x="27" y="473.898">//! ensures: self = #source</text><ellipse cx="18" cy="484.1998" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="556" x="27" y="490.1949">operator = (UnlabeledUndirectedGraph1&amp; rhs): UnlabeledUndirectedGraph1&amp;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="27" y="506.4918">//! replaces self</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="27" y="522.7887">//! restores rhs</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="27" y="539.0855">//! ensures: self = rhs</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="262" y1="306.0826" y2="306.0826"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="262" y="310.4293">Standard Operations</text><line style="stroke:#181818;stroke-width:0.5;" x1="411" x2="665" y1="306.0826" y2="306.0826"/><ellipse cx="18" cy="569.6842" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="27" y="575.6793">setNumberOfVertices (nv: Integer): void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="27" y="591.9762">//! updates self</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="27" y="608.273">//! restores nv</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="494" x="27" y="624.5699">//! ensures: self.vertices = {n: integer where (1 &lt;= n &lt;= nv) (n)}  and</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="27" y="640.8668">//!          self.edges = {}</text><ellipse cx="18" cy="651.1686" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="27" y="657.1637">addEdge (v1, v2: Integer): void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="27" y="673.4605">//! updates self</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="27" y="689.7574">//! restores v1, v2</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241" x="27" y="706.0543">//! requires: v1 is in g.vertices and</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="27" y="722.3512">//!           v2 is in g.vertices and</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="27" y="738.648">//!           {v1, v2} is not in g.edges</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="27" y="754.9449">//! ensures: g.vertices = #g.vertices and</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="324" x="27" y="771.2418">//!          g.edges = #g.edges union {{v1, v2}}</text><ellipse cx="18" cy="781.5436" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="247" x="27" y="787.5387">removeEdge (v1, v2: Integer): void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="27" y="803.8355">//! updates self</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="27" y="820.1324">//! restores v1, v2</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241" x="27" y="836.4293">//! requires: v1 is in g.vertices and</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="27" y="852.7262">//!           v2 is in g.vertices and</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="27" y="869.023">//!           {v1, v2} is in g.edges</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="27" y="885.3199">//! ensures: g.vertices = #g.vertices and</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="291" x="27" y="901.6168">//!          g.edges = #g.edges - {{v1, v2}}</text><ellipse cx="18" cy="911.9186" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="333" x="27" y="917.9137">removeAnyIncidentEdge (v1, v2: Integer): void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="27" y="934.2105">//! updates self</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="27" y="950.5074">//! restores v1</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="27" y="966.8043">//! replaces v2</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241" x="27" y="983.1012">//! requires: v1 is in g.vertices and</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="386" x="27" y="999.398">//!           there exists v : integer ({v1, v}) is in g.edges)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="27" y="1015.6949">//! ensures: g.vertices = #g.vertices and</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="489" x="27" y="1031.9918">//!          {v1, v2} is in #g.edges and g.edges = #g.edges - {{v1, v2}}</text><ellipse cx="18" cy="1042.2936" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="274" x="27" y="1048.2887">removeAnyEdge (v1, v2: Integer): void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="27" y="1064.5855">//! updates self</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="27" y="1080.8824">//! replaces v1, v2</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="27" y="1097.1793">//! requires: g.edges /= {}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="27" y="1113.4762">//! ensures: g.vertices = #g.vertices and</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="489" x="27" y="1129.773">//!          {v1, v2} is in #g.edges and g.edges = #g.edges - {{v1, v2}}</text><ellipse cx="18" cy="1140.0748" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="27" y="1146.0699">numberOfVertices (): Integer</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="27" y="1162.3668">//! restores self</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="317" x="27" y="1178.6637">//! ensures: numberOfVertices = |g.vertices|</text><ellipse cx="18" cy="1188.9654" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="27" y="1194.9605">numberOfEdges (): Integer</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="27" y="1211.2574">//! restores self</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="285" x="27" y="1227.5543">//! ensures: numberOfEdges = |g.edges|</text><ellipse cx="18" cy="1237.8561" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="27" y="1243.8512">degree (v: Integer): Integer</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="27" y="1260.148">//! restores self, v</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="494" x="27" y="1276.4449">//! ensures: degree = |{v2: integer where ({v, v2} is in g.edges) (v2)}|</text><ellipse cx="18" cy="1286.7467" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="27" y="1292.7418">isEdge (v1, v2): Boolean</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="27" y="1309.0387">//! restores self, v1, v2</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="311" x="27" y="1325.3355">//! ensures: isEdge = ({v1, v2} is in g.edges)</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="265.5" y1="554.5357" y2="554.5357"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="265.5" y="558.8824">Specific Operations</text><line style="stroke:#181818;stroke-width:0.5;" x1="407.5" x2="665" y1="554.5357" y2="554.5357"/></g><!--MD5=[0324e21e67d747750117aaded7107974]
link UNLABELED_UNDIRECTED_GRAPH_MODEL to Edge--><g id="link_UNLABELED_UNDIRECTED_GRAPH_MODEL_Edge"><path codeLine="85" d="M501.564,96.2467 C511.353,96.2467 521.142,96.2467 530.931,96.2467 " fill="none" id="UNLABELED_UNDIRECTED_GRAPH_MODEL-to-Edge" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="536.05,96.2467,527.05,92.2467,531.05,96.2467,527.05,100.2467,536.05,96.2467" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a409e44a5d877c292b40cfd948a85438]
reverse link UNLABELED_UNDIRECTED_GRAPH_MODEL to UnlabeledUndirectedGraph1--><g id="link_UNLABELED_UNDIRECTED_GRAPH_MODEL_UnlabeledUndirectedGraph1"><path codeLine="88" d="M336.5,138.2867 C336.5,153.1467 336.5,171.5267 336.5,192.5367 " fill="none" id="UNLABELED_UNDIRECTED_GRAPH_MODEL-backto-UnlabeledUndirectedGraph1" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="336.5,132.9767,332.5,141.9767,336.5,137.9767,340.5,141.9767,336.5,132.9767" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e85212c04639ac00578a83e6130f27b1]
@startuml
hide empty members

class UnlabeledUndirectedGraph1 {
   type UnlabeledUndirectedGraph1 is modeled by UNLABELED_UNDIRECTED_GRAPH_MODEL
   exemplar g
   initialization ensures
      g = ({},{})
__ Standard Operations __
   +UnlabeledUndirectedGraph1 ()
   //! replaces self
   //! ensures: self = ({},{})
   +~UnlabeledUndirectedGraph1 ()
   +clear(): void
   //! clears self
   +transferFrom (UnlabeledUndirectedGraph1& source): void
   //! replaces self
   //! clears source
   //! ensures: self = #source
   +operator = (UnlabeledUndirectedGraph1& rhs): UnlabeledUndirectedGraph1&
   //! replaces self
   //! restores rhs
   //! ensures: self = rhs
__ Specific Operations __
   +setNumberOfVertices (nv: Integer): void
   //! updates self
   //! restores nv
   //! ensures: self.vertices = {n: integer where (1 <= n <= nv) (n)}  and
   //!          self.edges = {}
   +addEdge (v1, v2: Integer): void
   //! updates self
   //! restores v1, v2
   //! requires: v1 is in g.vertices and 
   //!           v2 is in g.vertices and
   //!           {v1, v2} is not in g.edges
   //! ensures: g.vertices = #g.vertices and
   //!          g.edges = #g.edges union {{v1, v2}}
   +removeEdge (v1, v2: Integer): void
   //! updates self
   //! restores v1, v2
   //! requires: v1 is in g.vertices and 
   //!           v2 is in g.vertices and
   //!           {v1, v2} is in g.edges
   //! ensures: g.vertices = #g.vertices and
   //!          g.edges = #g.edges - {{v1, v2}}
   +removeAnyIncidentEdge (v1, v2: Integer): void
   //! updates self
   //! restores v1
   //! replaces v2
   //! requires: v1 is in g.vertices and 
   //!           there exists v : integer ({v1, v}) is in g.edges)
   //! ensures: g.vertices = #g.vertices and
   //!          {v1, v2} is in #g.edges and g.edges = #g.edges - {{v1, v2}}
   +removeAnyEdge (v1, v2: Integer): void
   //! updates self
   //! replaces v1, v2
   //! requires: g.edges /= {}
   //! ensures: g.vertices = #g.vertices and
   //!          {v1, v2} is in #g.edges and g.edges = #g.edges - {{v1, v2}}
   +numberOfVertices (): Integer
   //! restores self
   //! ensures: numberOfVertices = |g.vertices|
   +numberOfEdges (): Integer
   //! restores self
   //! ensures: numberOfEdges = |g.edges|
   +degree (v: Integer): Integer
   //! restores self, v
   //! ensures: degree = |{v2: integer where ({v, v2} is in g.edges) (v2)}|
   +isEdge (v1, v2): Boolean
   //! restores self, v1, v2
   //! ensures: isEdge = ({v1, v2} is in g.edges)
}

package Mathematics <<Cloud>> {
class Edge << (M,orchid) >> {
       e: finite set of integer
	Constraint |e| = 2
}

class UNLABELED_UNDIRECTED_GRAPH_MODEL << (M,orchid) >> {
   vertices: finite set of integer
   edges: finite set of Edge
}


UNLABELED_UNDIRECTED_GRAPH_MODEL .right.> Edge
}

UnlabeledUndirectedGraph1 .up.> UNLABELED_UNDIRECTED_GRAPH_MODEL
@enduml

PlantUML version 1.2022.4beta2(Unknown compile time)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>